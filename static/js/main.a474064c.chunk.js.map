{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAbF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GAE3B,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACC,6BAAKF,IACL,4BAAIC,WCOOK,EAbE,SAAC,GAAgB,IAAbC,EAAY,EAAZA,OACdC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACtC,OAAQ,cAAC,EAAD,CACNT,GAAOK,EAAOI,GAAGT,GACjBF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHEU,MAKtB,OACE,8BACKH,KCGOI,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKX,UAAW,MAAhB,SACC,uBACCA,UAAU,mCACVY,KAAO,SACPC,YAAc,gBACdC,SAAUH,OCCCI,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAO,kBAAmBC,OAAO,UAAlE,SACEJ,EAAMK,YC0CKC,G,wDAtCd,aAAc,IAAD,8BACZ,gBAaDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAb1C,EAAKC,MAAQ,CACZxB,OAAQ,GACRM,YAAa,IAJF,E,qDAQb,WAAoB,IAAD,OAClBmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKR,SAAS,CAACrB,OAAQ6B,S,oBAOrC,WAAS,IAAD,OACDC,EAAiBC,KAAKP,MAAMxB,OAAOgC,QAAO,SAAAhC,GAC/C,OAAOA,EAAOP,KAAKwC,cAAcC,SAAS,EAAKV,MAAMlB,YAAY2B,kBAElE,OAAIF,KAAKP,MAAMxB,OAAOmC,OAKrB,sBAAKvC,UAAY,KAAjB,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcwB,KAAKZ,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUnB,OAAS8B,SARd,6C,GAxBQM,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,EAAD,IACCC,SAASC,eAAe,SAM3BX,M","file":"static/js/main.a474064c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) =>{\r\n\t\r\n\treturn(\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw4 shadow-5'>\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nconst CardList = ( { robots }) =>{\r\n\tconst cardComponent = robots.map((user,i) => {\r\n\t\treturn (<Card key = {i} \r\n\t\t\t\tid = { robots[i].id} \r\n\t\t\t\tname={robots[i].name} \r\n\t\t\t\temail={robots[i].email}/>);\r\n\t})\r\n\treturn(\r\n\t\t\t<div>\r\n    \t\t\t{cardComponent}\r\n  \t\t\t</div>\r\n\t\t);\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn (\r\n\t\t<div className ='pa2'>\r\n\t\t\t<input \r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype = 'search' \r\n\t\t\t\tplaceholder = 'search robots' \r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\t\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n\treturn (\r\n\t\t<div style={{overflow: 'scroll', border:'5px solid black', height:'1100px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox.js';\r\nimport Scroll from '../components/Scroll.js';\r\n//import {robots} from './robots.js';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=>response.json())\r\n\t\t.then(users=>this.setState({robots: users}));\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value })\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst filteredRobots = this.state.robots.filter(robots=>{\r\n\t\t\treturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t})\r\n\t\tif(!this.state.robots.length){\r\n\t\t\treturn <h1>Loading</h1>\r\n\r\n\t\t}else{\r\n\t\treturn (\r\n\t\t\t<div className = 'tc'>\r\n\t\t\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<CardList robots ={filteredRobots}/>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n\t}\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import Card from './Card.js';\n//import CardList from './CardList.js';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <App/>\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}